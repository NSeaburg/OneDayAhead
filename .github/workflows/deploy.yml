name: Deploy to AWS ECS

on:
  push:
    branches: [ main ]
  workflow_dispatch:       # allow manual runs

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write       # OIDC auth to AWS
      contents: read
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # (Optional) build & push again, or rely on the image pushed by ecr.yml
      # - name: Build, tag, and push image
      #   run: |
      #     IMAGE_TAG=$(git rev-parse --short HEAD)
      #     docker build -t ${{ secrets.AWS_ECR_REPO }}:$IMAGE_TAG .
      #     aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | \
      #       docker login --username AWS --password-stdin \
      #       "${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com"
      #     docker push "${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.AWS_ECR_REPO }}:$IMAGE_TAG"

      - name: Force new ECS deployment
        run: |
          aws ecs update-service \
            --cluster  "${{ secrets.ECS_CLUSTER }}" \
            --service  "${{ secrets.ECS_SERVICE }}" \
            --force-new-deployment